[dario@archie TDM-extensions]$ python2 lu_client.py 
[ML-dummy]: __init__
[ML-dummy]: increment_c_frequency(one)
[ML-dummy]: increment_cc_frequency(one,1)
[ML-dummy]: increment_c_frequency(one two)
[ML-dummy]: increment_cc_frequency(one two,1)
[ML-dummy]: increment_c_frequency(one two three)
[ML-dummy]: increment_cc_frequency(one two three,1)
[ML-dummy]: increment_c_frequency(two)
[ML-dummy]: increment_cc_frequency(two,1)
[ML-dummy]: increment_c_frequency(two three)
[ML-dummy]: increment_cc_frequency(two three,1)
[ML-dummy]: increment_c_frequency(three)
[ML-dummy]: increment_cc_frequency(three,1)
[ML-dummy]: get_alignment_score(one,uno)
[ML-dummy]: reinforce_alignment(one,uno,0.0366666660458)
[ML-dummy]: get_alignment_score(one,due)
[ML-dummy]: reinforce_alignment(one,due,0.0213095241173)
[ML-dummy]: get_alignment_score(one,tre)
[ML-dummy]: reinforce_alignment(one,tre,0.01)
[ML-dummy]: get_alignment_score(one,due tre)
[ML-dummy]: reinforce_alignment(one,due tre,0.0078273806721)
[ML-dummy]: get_alignment_score(two,uno)
[ML-dummy]: reinforce_alignment(two,uno,0.0141666665487)
[ML-dummy]: get_alignment_score(three,uno)
[ML-dummy]: reinforce_alignment(three,uno,0.00666666664183)
[ML-dummy]: get_alignment_score(two three,uno)
[ML-dummy]: reinforce_alignment(two three,uno,0.00520833348855)
[ML-dummy]: get_alignment_score(two,due)
[ML-dummy]: reinforce_alignment(two,due,0.0383333327745)
[ML-dummy]: get_alignment_score(two,tre)
[ML-dummy]: reinforce_alignment(two,tre,0.0141666665487)
[ML-dummy]: get_alignment_score(three,due)
[ML-dummy]: reinforce_alignment(three,due,0.0148333333594)
[ML-dummy]: get_alignment_score(three,tre)
[ML-dummy]: reinforce_alignment(three,tre,0.0366666660458)
[ML-dummy]: get_alignment_score(two three,due tre)
[ML-dummy]: get_alignment_score(two,due tre)
[ML-dummy]: reinforce_alignment(two,due tre,0.0131249995902)
[ML-dummy]: get_alignment_score(three,due tre)
[ML-dummy]: reinforce_alignment(three,due tre,0.0128750000149)
[ML-dummy]: get_alignment_score(two three,due tre)
[ML-dummy]: get_alignment_score(two three,due)
[ML-dummy]: reinforce_alignment(two three,due,0.0132916662842)
[ML-dummy]: get_alignment_score(two three,tre)
[ML-dummy]: reinforce_alignment(two three,tre,0.0127083333209)
[ML-dummy]: get_alignment_score(two three,due tre)
[ML-dummy]: reinforce_alignment(two three,due tre,0.0187499988824)
[ML-dummy]: get_alignment_score(one two three,uno due tre)
[ML-dummy]: get_alignment_score(one,uno due)
[ML-dummy]: reinforce_alignment(one,uno due,0.0144940475002)
[ML-dummy]: get_alignment_score(two three,uno due)
[ML-dummy]: get_alignment_score(two,uno due)
[ML-dummy]: reinforce_alignment(two,uno due,0.0131249995902)
[ML-dummy]: get_alignment_score(three,uno due)
[ML-dummy]: reinforce_alignment(three,uno due,0.00537500018254)
[ML-dummy]: get_alignment_score(two three,uno due)
[ML-dummy]: get_alignment_score(two three,uno due)
[ML-dummy]: reinforce_alignment(two three,uno due,0.0132916662842)
[ML-dummy]: get_alignment_score(one two three,uno due tre)
[ML-dummy]: get_alignment_score(one,uno due tre)
[ML-dummy]: get_alignment_score(one,uno due tre)
[ML-dummy]: reinforce_alignment(one,uno due tre,0.0111235119402)
[ML-dummy]: get_alignment_score(two three,uno due tre)
[ML-dummy]: get_alignment_score(two three,uno due tre)
[ML-dummy]: get_alignment_score(two,uno due tre)
[ML-dummy]: get_alignment_score(two,uno due tre)
[ML-dummy]: reinforce_alignment(two,uno due tre,0.00682291667908)
[ML-dummy]: get_alignment_score(three,uno due tre)
[ML-dummy]: get_alignment_score(three,uno due tre)
[ML-dummy]: reinforce_alignment(three,uno due tre,0.0105104167014)
[ML-dummy]: get_alignment_score(two three,uno due tre)
[ML-dummy]: get_alignment_score(two three,uno due tre)
[ML-dummy]: get_alignment_score(two three,uno due tre)
[ML-dummy]: reinforce_alignment(two three,uno due tre,0.0127083333209)
[ML-dummy]: get_alignment_score(one two three,uno due tre)
[ML-dummy]: get_alignment_score(one two,uno)
[ML-dummy]: reinforce_alignment(one two,uno,0.0127083333209)
[ML-dummy]: get_alignment_score(one two,due tre)
[ML-dummy]: get_alignment_score(one two,due tre)
[ML-dummy]: get_alignment_score(one two,due)
[ML-dummy]: reinforce_alignment(one two,due,0.0149107137695)
[ML-dummy]: get_alignment_score(one two,tre)
[ML-dummy]: reinforce_alignment(one two,tre,0.00604166649282)
[ML-dummy]: get_alignment_score(one two,due tre)
[ML-dummy]: reinforce_alignment(one two,due tre,0.0149107137695)
[ML-dummy]: get_alignment_score(one two three,uno due tre)
[ML-dummy]: get_alignment_score(one two,uno due)
[ML-dummy]: get_alignment_score(one two,uno due)
[ML-dummy]: get_alignment_score(one two,uno due)
[ML-dummy]: reinforce_alignment(one two,uno due,0.0187499988824)
[ML-dummy]: get_alignment_score(one two three,uno due tre)
[ML-dummy]: get_alignment_score(one two,uno due tre)
[ML-dummy]: get_alignment_score(one two,uno due tre)
[ML-dummy]: get_alignment_score(one two,uno due tre)
[ML-dummy]: get_alignment_score(one two,uno due tre)
[ML-dummy]: get_alignment_score(one two,uno due tre)
[ML-dummy]: reinforce_alignment(one two,uno due tre,0.0127083333209)
[ML-dummy]: get_alignment_score(one two three,uno due tre)
[ML-dummy]: get_alignment_score(one two three,uno)
[ML-dummy]: get_alignment_score(one two three,uno)
[ML-dummy]: reinforce_alignment(one two three,uno,0.0104687502608)
[ML-dummy]: get_alignment_score(one two three,due tre)
[ML-dummy]: get_alignment_score(one two three,due tre)
[ML-dummy]: get_alignment_score(one two three,due tre)
[ML-dummy]: get_alignment_score(one two three,due tre)
[ML-dummy]: get_alignment_score(one two three,due)
[ML-dummy]: get_alignment_score(one two three,due)
[ML-dummy]: reinforce_alignment(one two three,due,0.00865029729903)
[ML-dummy]: get_alignment_score(one two three,tre)
[ML-dummy]: get_alignment_score(one two three,tre)
[ML-dummy]: reinforce_alignment(one two three,tre,0.0106770833954)
[ML-dummy]: get_alignment_score(one two three,due tre)
[ML-dummy]: reinforce_alignment(one two three,due tre,0.0128943445161)
[ML-dummy]: get_alignment_score(one two three,uno due tre)
[ML-dummy]: get_alignment_score(one two three,uno due)
[ML-dummy]: get_alignment_score(one two three,uno due)
[ML-dummy]: get_alignment_score(one two three,uno due)
[ML-dummy]: get_alignment_score(one two three,uno due)
[ML-dummy]: get_alignment_score(one two three,uno due)
[ML-dummy]: reinforce_alignment(one two three,uno due,0.0124895833433)
[ML-dummy]: get_alignment_score(one two three,uno due tre)
[ML-dummy]: reinforce_alignment(one two three,uno due tre,0.0138541664928)
[ML-dummy]: reinforce_alignment(one,uno,0.0366666660458)
[ML-dummy]: reinforce_alignment(one,uno due,0.0144940475002)
[ML-dummy]: reinforce_alignment(one,uno due tre,0.0111235119402)
[ML-dummy]: reinforce_alignment(one,due,0.0213095241173)
[ML-dummy]: reinforce_alignment(one,due tre,0.0078273806721)
[ML-dummy]: reinforce_alignment(one,tre,0.01)
[ML-dummy]: reinforce_alignment(one two,uno,0.0127083333209)
[ML-dummy]: reinforce_alignment(one two,uno due,0.0187499988824)
[ML-dummy]: reinforce_alignment(one two,uno due tre,0.0127083333209)
[ML-dummy]: reinforce_alignment(one two,due,0.0149107137695)
[ML-dummy]: reinforce_alignment(one two,due tre,0.0149107137695)
[ML-dummy]: reinforce_alignment(one two,tre,0.00604166649282)
[ML-dummy]: reinforce_alignment(one two three,uno,0.0104687502608)
[ML-dummy]: reinforce_alignment(one two three,uno due,0.0124895833433)
[ML-dummy]: reinforce_alignment(one two three,uno due tre,0.0138541664928)
[ML-dummy]: reinforce_alignment(one two three,due,0.00865029729903)
[ML-dummy]: reinforce_alignment(one two three,due tre,0.0128943445161)
[ML-dummy]: reinforce_alignment(one two three,tre,0.0106770833954)
[ML-dummy]: reinforce_alignment(two,uno,0.0141666665487)
[ML-dummy]: reinforce_alignment(two,uno due,0.0131249995902)
[ML-dummy]: reinforce_alignment(two,uno due tre,0.00682291667908)
[ML-dummy]: reinforce_alignment(two,due,0.0383333327745)
[ML-dummy]: reinforce_alignment(two,due tre,0.0131249995902)
[ML-dummy]: reinforce_alignment(two,tre,0.0141666665487)
[ML-dummy]: reinforce_alignment(two three,uno,0.00520833348855)
[ML-dummy]: reinforce_alignment(two three,uno due,0.0132916662842)
[ML-dummy]: reinforce_alignment(two three,uno due tre,0.0127083333209)
[ML-dummy]: reinforce_alignment(two three,due,0.0132916662842)
[ML-dummy]: reinforce_alignment(two three,due tre,0.0187499988824)
[ML-dummy]: reinforce_alignment(two three,tre,0.0127083333209)
[ML-dummy]: reinforce_alignment(three,uno,0.00666666664183)
[ML-dummy]: reinforce_alignment(three,uno due,0.00537500018254)
[ML-dummy]: reinforce_alignment(three,uno due tre,0.0105104167014)
[ML-dummy]: reinforce_alignment(three,due,0.0148333333594)
[ML-dummy]: reinforce_alignment(three,due tre,0.0128750000149)
[ML-dummy]: reinforce_alignment(three,tre,0.0366666660458)
[ML-dummy]: export_ml(lu/_out/toy):
[dario@archie TDM-extensions]$ 
